      - name: Clean and Reformat Redbulltv EPG XML
        run: |
          cp og_time/Redbulltv.xml og_time/Redbulltv_original.xml

          # Extract TV date from original file
          tv_date=$(grep -oP '(?<=<tv date=")[^"]*' og_time/Redbulltv_original.xml)

          # Start fresh cleaned file
          {
            echo '<?xml version="1.0" encoding="UTF-8"?>'
            echo '<!DOCTYPE tv SYSTEM "xmltv.dtd">'
            echo "<tv date=\"$tv_date\" generator-info-name=\"NZXMLTV Red Bull TV 1.0\" generator-info-url=\"https://nzxmltv.com/iptv/\" source-info-name=\"NZXMLTV (Red Bull TV)\" source-info-url=\"https://www.redbull.com/int-en/channels/best-of-red-bull-stream\">"
            echo '  <channel id="10001">'
            echo '    <display-name lang="US">Red Bull TV</display-name>'
            echo '    <icon src="https://i.imgur.com/3IO3vYp.png" />'
            echo '  </channel>'
          } > og_time/Redbulltv.cleaned.xml

          # Parse and transform programmes
          awk '
            BEGIN {
              RS = "</programme>"
              FS = "\n"
            }
            /<programme / {
              # Extract start, stop, channel attrs from <programme ...>
              match($0, /<programme[^>]*start="([^"]+)"/, a_start)
              match($0, /<programme[^>]*stop="([^"]+)"/, a_stop)
              match($0, /<programme[^>]*channel="([^"]+)"/, a_chan)
              start = a_start[1]
              stop = a_stop[1]
              channel = a_chan[1]

              # Extract YYYY-MM-DD date from start attribute (first 8 chars)
              date = substr(start,1,4) "-" substr(start,5,2) "-" substr(start,7,2)

              # Extract <title> content
              match($0, /<title[^>]*lang="[^"]*"[^>]*>([^<]*)<\/title>/, t)
              title = t[1]

              # Extract <sub-title> content if exists
              match($0, /<sub-title[^>]*lang="[^"]*"[^>]*>([^<]*)<\/sub-title>/, st)
              subtitle = st[1]

              # Merge title and subtitle if subtitle exists
              if (length(subtitle) > 0) {
                title = title " - " subtitle
              }

              # Extract <desc> content
              match($0, /<desc[^>]*lang="[^"]*"[^>]*>([^<]*)<\/desc>/, d)
              desc = d[1]

              # Extract <icon src="..."/>
              match($0, /<icon src="([^"]*)" ?\/>/, ic)
              icon = ic[1]

              # Print the reformatted programme block
              printf "  <programme start=\"%s\" stop=\"%s\" channel=\"%s\">\n", start, stop, channel
              printf "    <title lang=\"en\">%s</title>\n", title
              printf "    <desc lang=\"en\">%s</desc>\n", desc
              if (length(icon) > 0) {
                printf "    <icon src=\"%s\" />\n", icon
              }
              printf "    <date>%s</date>\n", date
              print "  </programme>"
            }
          ' og_time/Redbulltv_original.xml >> og_time/Redbulltv.cleaned.xml

          echo "</tv>" >> og_time/Redbulltv.cleaned.xml
          mv og_time/Redbulltv.cleaned.xml og_time/Redbulltv.xml
