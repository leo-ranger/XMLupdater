name: Update EPG XML Redbulltv

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create individual folder if it doesn't exist
        run: mkdir -p individual

      - name: Fetch EPG XML
        run: curl -o individual/Redbulltv.xml "https://nzxmltv.com/iptv/redbull.xml"

      - name: Clean and Transform EPG XML
        run: |
          # Remove duplicate XML headers and DOCTYPE lines
          sed -i '/<?xml version=.*?>/d' individual/Redbulltv.xml
          sed -i '/<!DOCTYPE tv SYSTEM.*>/d' individual/Redbulltv.xml

          # Insert single XML header + DOCTYPE on one line at the top
          sed -i '1i<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE tv SYSTEM "xmltv.dtd">' individual/Redbulltv.xml

          # Replace <channel> block with clean static version
          sed -i '/<channel id=/,/<\/channel>/c\
          <channel id="10001">\
          <display-name lang="US">Red Bull TV</display-name>\
          <icon src="https://i.imgur.com/3IO3vYp.png" />\
          </channel>' individual/Redbulltv.xml

          # Remove all <url>...</url> lines from the file
          sed -i '/<url>.*<\/url>/d' individual/Redbulltv.xml

          # Use awk to transform programmes as requested
          awk '
          BEGIN { RS = "<programme "; ORS = "" }
          NR == 1 { print; next }
          {
            split($0, parts, "</programme>")
            prog = parts[1]
            rest = parts[2]

            # Extract title and subtitle text
            match(prog, /<title[^>]*>([^<]*)<\/title>/, t)
            match(prog, /<sub-title[^>]*>([^<]*)<\/sub-title>/, st)
            newtitle = "<title lang=\"zh\">" t[1]
            if (st[1] != "") newtitle = newtitle " - " st[1]
            newtitle = newtitle "</title>"

            # Replace old title with new one
            gsub(/<title[^>]*>[^<]*<\/title>/, newtitle, prog)

            # Remove subtitle tag
            gsub(/<sub-title[^>]*>[^<]*<\/sub-title>/, "", prog)

            # Remove lang="en" from <desc>
            gsub(/<desc lang="en">/, "<desc>", prog)

            print "<programme " prog "</programme>" rest
          }
          ' individual/Redbulltv.xml > individual/Redbulltv.cleaned.xml
          
          # Replace original with cleaned
          mv individual/Redbulltv.cleaned.xml individual/Redbulltv.xml

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add individual/Redbulltv.xml
          git commit -m "Updated EPG $(date +%Y-%m-%d)" || echo "No changes to commit"
          git pull --rebase --autostash
          git push --force
