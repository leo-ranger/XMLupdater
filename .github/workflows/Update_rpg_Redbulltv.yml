name: Update EPG XML Redbulltv

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create output folder if it doesn't exist
        run: mkdir -p og_time

      - name: Fetch EPG XML
        run: curl -o og_time/Redbulltv.xml "https://nzxmltv.com/iptv/redbull.xml"

      - name: Clean and Reformat Redbulltv EPG XML
        run: |
          cp og_time/Redbulltv.xml og_time/Redbulltv_original.xml

          # Extract TV date from original file
          tv_date=$(grep -oP '(?<=<tv date=")[^"]*' og_time/Redbulltv_original.xml)

          # Start fresh cleaned file
          {
            echo '<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE tv SYSTEM "xmltv.dtd">'
            echo "<tv date=\"$tv_date\" generator-info-name=\"NZXMLTV Red Bull TV 1.0\" generator-info-url=\"https://nzxmltv.com/iptv/\" source-info-name=\"NZXMLTV (Red Bull TV)\" source-info-url=\"https://www.redbull.com/int-en/channels/best-of-red-bull-stream\">"
            echo "  <channel id=\"10001\">"
            echo "    <display-name lang=\"US\">Red Bull TV</display-name>"
            echo "    <icon src=\"https://i.imgur.com/3IO3vYp.png\" />"
            echo "  </channel>"
          } > og_time/Redbulltv.cleaned.xml

          # Extract and clean valid <programme> entries only
          awk '
            BEGIN { in_programme=0; skip_rating=0; }
            /<programme / { in_programme=1 }
            /<\/programme>/ { in_programme=0 }
            in_programme && /<url>.*<\/url>/ { next }
            in_programme && /<episode-num system="redbull.com">.*<\/episode-num>/ { next }
            in_programme && /<episode-num system="original-air-date">.*<\/episode-num>/ { next }
            in_programme && /<rating system="Red Bull TV">/ { skip_rating=1; next }
            skip_rating { if (/<\/rating>/) { skip_rating=0 } next }
            /<\?xml|<!DOCTYPE|<tv|<\/tv>|<channel /,/<\/channel>/ { next }
            { print }
          ' og_time/Redbulltv_original.xml >> og_time/Redbulltv.cleaned.xml

          echo "</tv>" >> og_time/Redbulltv.cleaned.xml
          mv og_time/Redbulltv.cleaned.xml og_time/Redbulltv.xml

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git pull --rebase --autostash
          git add og_time/Redbulltv.xml

          if ! git diff --cached --quiet; then
            git commit -m "Updated EPG $(date -u +%Y-%m-%d)"
            git push
          else
            echo "No changes to commit"
          fi
