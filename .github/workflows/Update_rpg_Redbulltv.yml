name: Update EPG XML Redbulltv

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create output folder if it doesn't exist
        run: mkdir -p og_time

      - name: Fetch EPG XML
        run: curl -o og_time/Redbulltv.xml "https://nzxmltv.com/iptv/redbull.xml"

      - name: Clean and Reformat Redbulltv EPG XML
        run: |
          cp og_time/Redbulltv.xml og_time/Redbulltv_original.xml

          # Extract first programme start time
          first_start=$(grep -oPm1 '<programme start="\K[^"]+' og_time/Redbulltv_original.xml)
          first_start_fmt="${first_start:0:4}-${first_start:4:2}-${first_start:6:2} ${first_start:8:2}:${first_start:10:2}:${first_start:12:2}"
          sydney_time=$(TZ=Australia/Sydney date -d "$first_start_fmt" +"%Y%m%d%H%M%S %z")

          # Begin new XML output
          {
            echo '<?xml version="1.0" encoding="UTF-8"?>'
            echo '<!DOCTYPE tv SYSTEM "xmltv.dtd">'
            echo "<tv date=\"$sydney_time\" generator-info-name=\"NZXMLTV Red Bull TV 1.0\" generator-info-url=\"https://nzxmltv.com/iptv/\" source-info-name=\"NZXMLTV (Red Bull TV)\" source-info-url=\"https://www.redbull.com/int-en/channels/best-of-red-bull-stream\">"
            echo '  <channel id="421896">'
            echo '    <display-name lang="US">Red Bull TV</display-name>'
            echo '    <icon src="https://i.imgur.com/3IO3vYp.png" />'
            echo '  </channel>'
          } > og_time/Redbulltv.cleaned.xml

          # Clean and format programme blocks
          awk '
            BEGIN {
              RS = "</programme>"
              FS = "\n"
            }
            /<programme / {
              match($0, /<programme[^>]*start="([^"]+)"/, a_start)
              match($0, /<programme[^>]*stop="([^"]+)"/, a_stop)
              start = substr(a_start[1], 1, 14) " +0000"
              stop = substr(a_stop[1], 1, 14) " +0000"
              date = substr(start, 1, 4) "-" substr(start, 5, 2) "-" substr(start, 7, 2)

              match($0, /<title[^>]*>([^<]*)<\/title>/, t)
              title = t[1]

              match($0, /<sub-title[^>]*>([^<]*)<\/sub-title>/, st)
              subtitle = st[1]
              if (length(subtitle) > 0) {
                title = title " - " subtitle
              }

              match($0, /<desc[^>]*>([^<]*)<\/desc>/, d)
              desc = d[1]

              match($0, /<icon src="([^"]*)"/, ic)
              icon = ic[1]

              print "  <programme channel=\"421896\" start=\"" start "\" stop=\"" stop "\">"
              print "    <title lang=\"en\">" title "</title>"
              print "    <desc lang=\"en\">" desc "</desc>"
              if (length(icon) > 0) {
                print "    <icon src=\"" icon "\" />"
              }
              print "    <date>" date "</date>"
              print "  </programme>"
            }
          ' og_time/Redbulltv_original.xml >> og_time/Redbulltv.cleaned.xml

          echo "</tv>" >> og_time/Redbulltv.cleaned.xml
          mv og_time/Redbulltv.cleaned.xml og_time/Redbulltv.xml

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git pull --rebase --autostash
          git add og_time/Redbulltv.xml

          if ! git diff --cached --quiet; then
            git commit -m "Updated EPG $(date -u +%Y-%m-%d)"
            git push
          else
            echo "No changes to commit"
          fi
