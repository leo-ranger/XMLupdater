name: Update EPG XML Redbulltv

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC daily
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create individual folder if it doesn't exist
        run: mkdir -p individual

      - name: Fetch EPG XML
        run: curl -o individual/Redbulltv.xml "https://nzxmltv.com/iptv/redbull.xml"

      - name: Clean and Format Red Bull TV EPG
        run: |
          # Backup original
          cp individual/Redbulltv.xml individual/Redbulltv_original.xml

          # Extract <tv date="">
          tv_date=$(grep -oP '(?<=<tv date=")[^"]*' individual/Redbulltv_original.xml)

          # Start cleaned output
          {
            echo '<?xml version="1.0" encoding="UTF-8"?>'
            echo '<!DOCTYPE tv SYSTEM "xmltv.dtd">'
            echo "<tv date=\"$tv_date\" generator-info-name=\"NZXMLTV Red Bull TV 1.0\" generator-info-url=\"https://nzxmltv.com/iptv/\" source-info-name=\"NZXMLTV (Red Bull TV)\" source-info-url=\"https://www.redbull.com/int-en/channels/best-of-red-bull-stream\">"
            echo "  <channel id=\"403788\">"
            echo "    <display-name lang=\"US\">Red Bull TV</display-name>"
            echo "    <icon src=\"https://i.imgur.com/3IO3vYp.png\" />"
            echo "  </channel>"
          } > individual/Redbulltv.cleaned.xml

          # Filter <programme> blocks and clean unwanted tags
          awk '
          /<programme / { in_programme = 1 }
          /<\/programme>/ { in_programme = 0 }

          in_programme && /<url>.*<\/url>/ { next }
          in_programme && /<episode-num system="redbull.com">.*<\/episode-num>/ { next }
          in_programme && /<episode-num system="original-air-date">.*<\/episode-num>/ { next }

          # Remove <rating system="Red Bull TV">...</rating> block
          in_programme && /<rating system="Red Bull TV">/ {
            skip_rating = 1
            next
          }
          skip_rating {
            if (/<\/rating>/) {
              skip_rating = 0
            }
            next
          }

          { print }

          ' individual/Redbulltv_original.xml >> individual/Redbulltv.cleaned.xml

          # Close </tv>
          echo "</tv>" >> individual/Redbulltv.cleaned.xml

          # Replace file
          mv individual/Redbulltv.cleaned.xml individual/Redbulltv.xml

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add individual/Redbulltv.xml
          git commit -m "Cleaned Red Bull TV EPG: removed extra tags from programme blocks $(date +%Y-%m-%d)" || echo "No changes to commit"
          git pull --rebase --autostash
          git push --force
