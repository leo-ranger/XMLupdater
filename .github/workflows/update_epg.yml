name: Update EPG XML

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC daily
  workflow_dispatch:  # Allows manual runs

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Set Environment Variables
        run: echo "BLUEY_ICON=https://static.wikia.nocookie.net/blueypedia/images/4/41/Bluey_logi.png/revision/latest/thumbnail/width/360/height/360?cb=20190120094255" >> $GITHUB_ENV

      - name: Fetch First EPG XML (Channel 1)
        run: curl -s -o epg.xml "https://epg.pw/api/epg.xml?lang=en&date=$(date +%Y%m%d)&channel_id=403674"

      - name: Fetch Second EPG XML (Channel 2)
        run: curl -s -o epg2.xml "https://epg.pw/api/epg.xml?lang=en&date=$(date +%Y%m%d)&channel_id=93341"

      - name: Validate EPG Files
        run: |
          if [[ ! -s epg2.xml ]]; then
            echo "Error: epg2.xml is empty!" >&2
            exit 1
          fi
          if ! xmlstarlet val -q epg2.xml; then
            echo "Error: epg2.xml is not valid XML!" >&2
            exit 1
          fi

      - name: Modify First EPG (Check for Bluey)
        run: |
          if xmlstarlet sel -t -m "//programme/title[@lang='zh'][text()='Bluey']" -v . epg.xml | grep -q "Bluey"; then
            echo "Found Bluey in Channel 1!"
            xmlstarlet ed -L \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "icon" -v "" \
              -i "//programme[title[@lang='zh']='Bluey']/icon" -t attr -n "src" -v "$BLUEY_ICON" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Series" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Animation" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Comedy" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Drama" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Kids" epg.xml
          else
            echo "Bluey not found in Channel 1."
          fi

      - name: Modify Second EPG (Check for Bluey)
        run: |
          if xmlstarlet sel -t -m "//programme/title[@lang='zh'][text()='Bluey']" -v . epg2.xml | grep -q "Bluey"; then
            echo "Found Bluey in Channel 2!"
            xmlstarlet ed -L \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "icon" -v "" \
              -i "//programme[title[@lang='zh']='Bluey']/icon" -t attr -n "src" -v "$BLUEY_ICON" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Series" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Animation" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Comedy" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Drama" \
              -s "//programme[title[@lang='zh']='Bluey']" -t elem -n "category" -v "Kids" epg2.xml
          else
            echo "Bluey not found in Channel 2."
          fi

      - name: Merge EPG Data Correctly
        run: |
          echo "Ensuring valid XML merge..."
          xmlstarlet ed -L -d "//tv" epg2.xml || { echo "Error modifying epg2.xml"; exit 1; }
          xmlstarlet ed -L -s "/tv" -t elem -n "programmes" -v "" epg.xml
          xmlstarlet ed -L -m "//programme" "/tv/programmes" epg2.xml epg.xml

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          if ! git diff --quiet; then
            git add epg.xml
            git commit -m "Updated EPG sequentially $(date +%Y-%m-%d)"
            git push
          else
            echo "No changes to commit"
